spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin
#虚拟host 可以不设置,使用server默认host
spring.rabbitmq.virtual-host=my_vhost

spring.application.name=rabbitmq

# 开启发送确认
spring.rabbitmq.publisher-returns=true
# 开启发送失败退回
spring.rabbitmq.publisher-confirms=true
spring.rabbitmq.template.mandatory=true
spring.rabbitmq.listener.type=simple
# 开启消息消费手动确认
spring.rabbitmq.listener.simple.acknowledge-mode=manual

#--------------------并发量的配置--------------------
spring.rabbitmq.listener.simple.concurrency=10
spring.rabbitmq.listener.simple.max-concurrency=20
spring.rabbitmq.listener.direct.prefetch=5

#--------------------用户操作日志消息模型配置  direct模式--------------------
log.user.direct.queue=${mq.env}.log.user.direct.queue
log.user.direct.exchange=${mq.env}.log.user.direct.exchange
log.user.direct.routing.key=${mq.env}.log.user.direct.routing.key

#--------------------用户操作日志消息模型配置  fanout模式 不需要routing.key--------------------
log.user.fanout.queue1=${mq.env}.log.user.fanout.queue1
log.user.fanout.queue2=${mq.env}.log.user.fanout.queue2
log.user.fanout.exchange=${mq.env}.log.user.fanout.exchange

#--------------------用户操作日志消息模型配置  topic模式 --------------------
log.user.topic.exchange=${mq.env}.log.user.topic.exchange
#队列名
log.user.topic.queue=${mq.env}.log.user.topic.queue
#队列匹配规则
log.user.topic.queue.routing.key=#  
#测试key值
#不可以绑定到队列
log.user.topic.routing.key1=${mq.env}.log.file.topic.routing.key
#可绑定到队列
log.user.topic.routing.key2=${mq.env}.log.user.topic.routing.key

#--------------------用户操作日志消息模型配置  headers模式 --------------------
log.user.headers.exchange=${mq.env}.log.user.headers.exchange
log.user.headers.queue=${mq.env}.log.user.headers.queue

server.servlet.context-path=/rabbit
